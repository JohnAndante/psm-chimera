services:
  # ======================================================
  # üóÑÔ∏è BANCO DE DADOS POSTGRESQL
  # ======================================================
  postgres:
    image: postgres:17.0
    container_name: psm-chimera-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: psm_chimera
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: masterkey
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - psm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d psm_chimera"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ======================================================
  # üîß SETUP DO BANCO (MIGRATIONS + SEED) - JOB √öNICO
  # ======================================================
  database-setup:
    build:
      context: .
      target: production
    container_name: psm-chimera-db-setup
    restart: "no"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:masterkey@postgres:5432/psm_chimera
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - psm-network
    command:
      [
        "sh",
        "-c",
        "npm run db:generate && npm run db:migrate && npm run db:seed && echo 'Database setup completed successfully'",
      ]

  # ======================================================
  # üñ•Ô∏è SERVIDOR BACKEND API
  # ======================================================
  # backend:
  #   build:
  #     context: .
  #     target: server
  #   container_name: psm-chimera-backend
  #   restart: unless-stopped
  #   environment:
  #     NODE_ENV: production
  #     DATABASE_URL: postgresql://postgres:masterkey@postgres:5432/psm_chimera
  #     JWT_SECRET: ${JWT_SECRET:-psm-chimera-secret-key-production}
  #     SERVER_PORT: 3000
  #     FRONTEND_URL: ${FRONTEND_URL:-http://localhost:5100}
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     database-setup:
  #       condition: service_completed_successfully
  #   networks:
  #     - psm-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

# ======================================================
# üåê NETWORKS
# ======================================================
networks:
  psm-network:
    driver: bridge

# ======================================================
# üíæ VOLUMES
# ======================================================
volumes:
  postgres_data:
    driver: local
